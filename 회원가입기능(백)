client(브라우저)의 폼에서 입력값을 보내면 bodyParser을 통해 클라이언트의 body부분에서 post한 값을 알맞게 가공하여 처리한다.

여기서 

//application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({extended:true}))
//application/json
app.use(bodyParser.json())

이 두가지 옵션을 걸어줘야 한다.

PostMan : 그냥 Client라고 생각하면 편하다
 즉, 현재 단계에서는 서버사이드 프로그래밍을 하는 중 이므로 client가 없으니 PostMan을 이용하여 req를 보낸다.


Register Route 만들기(회원가입용 페이지)

client로 부터의 post 요청이기 때문에

app.post로 시작한다

그리고 처리후의 라우팅은 /register로 하고 콜백함수에서 데이터 트랜젝션을 처리한다.

전에 만들어둔 mongoDB 모델인 User를 require을 통해 불러오고

불러온 모델을 사용하기위해 인스턴스화 시켜주고 해당하는 모델에 알맞은 형태의 값인 Json폼의 값을 넣어주기위해

생성자에 req.body를 넣어준다 (여기서 bodyParser을 사용하기때문에 미리 require해준다.)

그렇게 하고 mongoDB에 완전히 저장하기 위해서는 모델 인스턴스의 save메서드를 사용한다.

Node Mon : 소스를 변경할 때 그걸 감지해서 자동으로 서버를 재 시작 해주는 tool



